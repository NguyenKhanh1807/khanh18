impl Hello for Student {
    fn say_something(&self) -> String {
        String::from("I'm a good student")
    }  
}

impl Hello for Teacher {
    fn say_something(&self) -> String {
        String::from("I'm not a bad teacher")   
    }
}

// Exercise 2
#[derive(PartialEq, Eq)]  
struct Point {
    x: i32, 
    y: i32
}

// Exercise 3 
fn sum<T: Add<Output=T>>(x: T, y: T) -> T {
    x + y
}

// Exercise 4
fn static_dispatch<T: Foo>(x: T) { 
    x.method()
}

fn dynamic_dispatch(x: &dyn Foo) {
    x.method()
}

// Exercise 5
fn draw_with_ref(x: &dyn Draw) {
   
// Exercise 6
impl Container for Stack {
    type Item = u8;

    fn insert(&mut self, item: u8) { ... } 
    // ... Implement other methods
}
